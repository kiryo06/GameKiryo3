#pragma once
#include <memory>
#include "Rect.h"
class Map;
class Camera;
class Player
{
public:

	Player();
	~Player();
	/// <summary>
	/// プレイヤーの初期化
	/// </summary>
	void Init();
	/// <summary>
	/// プレイヤーの更新
	/// </summary>
	void Update();
	/// <summary>
	/// 未来のプレイヤー位置とマップの当たり判定を行い、調整したvelocity（移動ベクトル)を返す
	/// </summary>
	VECTOR CheckPlayerHitWithMap();
	/// <summary>
	/// マップチップと未来のプレイヤーポジションの当たり判定
	/// </summary>
	bool IsHitPlayerWithMapChip();
	/// <summary>
	/// 頭上がぶつかっているか見る
	/// </summary>
	void CheckIsTopHit();
	/// <summary>
	/// 地面に接地しているか見る
	/// </summary>
	void CheckIsGround();
	/// <summary>
	/// プレイヤー描画
	/// </summary>
	void Draw(Camera* camera);
private:
	const float Gravity = 0.3f;		// キャラに掛かる重力加速度
	const float JumpPower = 9.0f;	// キャラのジャンプ力
	const float Speed = 5.0f;		// キャラの移動スピード
	VECTOR pos;					// 座標 横：中心　縦：中心
	VECTOR dir;					// 座標 ()
	float w, h;					// 幅、高さ
	float fallSpeed;				// プレイヤーの落下速度。ジャンプ時は反転する
	bool isGround;				// プレイヤーが接地中か
	bool isHitTop;				// プレイヤーの頭が天井に当たっているか
	Map* m_map;
	Camera* m_camera;
};

const float Gravity = 0.3f;                         // キャラに掛かる重力加速度
const float JumpPower = 9.0f;                         // キャラのジャンプ力
const float Speed = 5.0f;                         // キャラの移動スピード

struct Player
{
	VECTOR	pos;		// 座標 HACK: プレイヤーの座標の中心は、横：中心　縦：中心。描画や計算を変えたら全部変わるので注意
	VECTOR	dir;		// 座標
	float	w, h;		// 幅、高さ
	float	fallSpeed;	// プレイヤーの落下速度。ジャンプ時は反転する
	bool	isGround;	// プレイヤーが接地中か
	bool	isHitTop;	// プレイヤーの頭が天井に当たっているか
};
struct Map;
struct MapChip;
struct Camera;
void InitPlayer(Player& player);
void UpdatePlayer(Player& player, const Map& map);
VECTOR CheckPlayerHitWithMap(Player& player, const Map& map, const VECTOR& velocity);
bool IsHitPlayerWithMapChip(const Player& player, const VECTOR& futurePos, const MapChip& mapChip);
void CheckIsTopHit(Player& player, const Map& map);
void CheckIsGround(Player& player, const Map& map);
void DrawPlayer(const Player& player, const Camera& camera);